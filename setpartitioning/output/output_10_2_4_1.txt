######################################
P=101, numruns=1000, chain_prm=1.78
{0, 4}
energy=-118.0, occurrence=43, chain_break=0.0
元問題の最適値？: 84.0
実際のコスト: 84
[1, 1]
実行可能! 元問題の最適値は84.0
{4, 5}
energy=-118.0, occurrence=48, chain_break=0.0
元問題の最適値？: 84.0
実際のコスト: 84
[1, 1]
実行可能! 元問題の最適値は84.0
{1, 4}
energy=-118.0, occurrence=61, chain_break=0.0
元問題の最適値？: 84.0
実際のコスト: 84
[1, 1]
実行可能! 元問題の最適値は84.0
{9, 4}
energy=-117.0, occurrence=65, chain_break=0.0
元問題の最適値？: 85.0
実際のコスト: 85
[1, 1]
実行可能! 元問題の最適値は85.0
{4, 7}
energy=-117.0, occurrence=47, chain_break=0.0
元問題の最適値？: 85.0
実際のコスト: 85
[1, 1]
実行可能! 元問題の最適値は85.0
{4, 6}
energy=-117.0, occurrence=121, chain_break=0.0
元問題の最適値？: 85.0
実際のコスト: 85
[1, 1]
実行可能! 元問題の最適値は85.0
{0, 8}
energy=-115.0, occurrence=13, chain_break=0.0
元問題の最適値？: 87.0
実際のコスト: 87
[1, 1]
実行可能! 元問題の最適値は87.0
{8, 1}
energy=-115.0, occurrence=11, chain_break=0.0
元問題の最適値？: 87.0
実際のコスト: 87
[1, 1]
実行可能! 元問題の最適値は87.0
{8, 5}
energy=-115.0, occurrence=12, chain_break=0.0
元問題の最適値？: 87.0
実際のコスト: 87
[1, 1]
実行可能! 元問題の最適値は87.0
{8, 9}
energy=-114.0, occurrence=12, chain_break=0.0
元問題の最適値？: 88.0
実際のコスト: 88
[1, 1]
実行可能! 元問題の最適値は88.0
{8, 6}
energy=-114.0, occurrence=20, chain_break=0.0
元問題の最適値？: 88.0
実際のコスト: 88
[1, 1]
実行可能! 元問題の最適値は88.0
{8, 7}
energy=-114.0, occurrence=8, chain_break=0.0
元問題の最適値？: 88.0
実際のコスト: 88
[1, 1]
実行可能! 元問題の最適値は88.0
{1, 2}
energy=-113.0, occurrence=19, chain_break=0.0
元問題の最適値？: 89.0
実際のコスト: 89
[1, 1]
実行可能! 元問題の最適値は89.0
{0, 2}
energy=-113.0, occurrence=16, chain_break=0.0
元問題の最適値？: 89.0
実際のコスト: 89
[1, 1]
実行可能! 元問題の最適値は89.0
{2, 5}
energy=-113.0, occurrence=20, chain_break=0.0
元問題の最適値？: 89.0
実際のコスト: 89
[1, 1]
実行可能! 元問題の最適値は89.0
{9, 2}
energy=-112.0, occurrence=20, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{2, 7}
energy=-112.0, occurrence=18, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{2, 6}
energy=-112.0, occurrence=34, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{3, 5}
energy=-112.0, occurrence=38, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{0, 3}
energy=-112.0, occurrence=38, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{1, 3}
energy=-112.0, occurrence=58, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{3, 7}
energy=-111.0, occurrence=43, chain_break=0.0
元問題の最適値？: 91.0
実際のコスト: 91
[1, 1]
実行可能! 元問題の最適値は91.0
{9, 3}
energy=-111.0, occurrence=46, chain_break=0.0
元問題の最適値？: 91.0
実際のコスト: 91
[1, 1]
実行可能! 元問題の最適値は91.0
{3, 6}
energy=-111.0, occurrence=122, chain_break=0.0
元問題の最適値？: 91.0
実際のコスト: 91
[1, 1]
実行可能! 元問題の最適値は91.0
{0}
energy=-91.0, occurrence=8, chain_break=0.0
元問題の最適値？: 111.0
実際のコスト: 10
[0, 1]
実行不可能!
{1}
energy=-91.0, occurrence=2, chain_break=0.0
元問題の最適値？: 111.0
実際のコスト: 10
[0, 1]
実行不可能!
{5}
energy=-91.0, occurrence=8, chain_break=0.0
元問題の最適値？: 111.0
実際のコスト: 10
[0, 1]
実行不可能!
{6}
energy=-90.0, occurrence=10, chain_break=0.0
元問題の最適値？: 112.0
実際のコスト: 11
[0, 1]
実行不可能!
{9}
energy=-90.0, occurrence=5, chain_break=0.0
元問題の最適値？: 112.0
実際のコスト: 11
[0, 1]
実行不可能!
{7}
energy=-90.0, occurrence=4, chain_break=0.0
元問題の最適値？: 112.0
実際のコスト: 11
[0, 1]
実行不可能!
{10}
energy=-32.0, occurrence=4, chain_break=0.0
元問題の最適値？: 170.0
実際のコスト: 170
[1, 1]
実行可能! 元問題の最適値は170.0
{1, 4, 5}
energy=-7.0, occurrence=2, chain_break=0.0
元問題の最適値？: 195.0
実際のコスト: 94
[1, 2]
実行不可能!
{0, 1, 4}
energy=-7.0, occurrence=1, chain_break=0.0
元問題の最適値？: 195.0
実際のコスト: 94
[1, 2]
実行不可能!
{1, 4, 9}
energy=-6.0, occurrence=1, chain_break=0.0
元問題の最適値？: 196.0
実際のコスト: 95
[1, 2]
実行不可能!
{1, 4, 6}
energy=-6.0, occurrence=2, chain_break=0.0
元問題の最適値？: 196.0
実際のコスト: 95
[1, 2]
実行不可能!
{0, 4, 7}
energy=-6.0, occurrence=1, chain_break=0.0
元問題の最適値？: 196.0
実際のコスト: 95
[1, 2]
実行不可能!
{9, 4, 6}
energy=-5.0, occurrence=1, chain_break=0.0
元問題の最適値？: 197.0
実際のコスト: 96
[1, 2]
実行不可能!
{8, 1, 6}
energy=-3.0, occurrence=2, chain_break=0.0
元問題の最適値？: 199.0
実際のコスト: 98
[1, 2]
実行不可能!
{8, 1, 7}
energy=-3.0, occurrence=1, chain_break=0.0
元問題の最適値？: 199.0
実際のコスト: 98
[1, 2]
実行不可能!
{1, 2, 6}
energy=-1.0, occurrence=1, chain_break=0.0
元問題の最適値？: 201.0
実際のコスト: 100
[1, 2]
実行不可能!
{0, 2, 6}
energy=-1.0, occurrence=1, chain_break=0.0
元問題の最適値？: 201.0
実際のコスト: 100
[1, 2]
実行不可能!
{9, 2, 6}
energy=0.0, occurrence=1, chain_break=0.0
元問題の最適値？: 202.0
実際のコスト: 101
[1, 2]
実行不可能!
{0, 9, 3}
energy=0.0, occurrence=1, chain_break=0.0
元問題の最適値？: 202.0
実際のコスト: 101
[1, 2]
実行不可能!
{1, 3, 6}
energy=0.0, occurrence=9, chain_break=0.0
元問題の最適値？: 202.0
実際のコスト: 101
[1, 2]
実行不可能!
{1, 6}
energy=21.0, occurrence=1, chain_break=0.0
元問題の最適値？: 223.0
実際のコスト: 21
[0, 2]
実行不可能!
{6, 7}
energy=22.0, occurrence=1, chain_break=0.0
元問題の最適値？: 224.0
実際のコスト: 22
[0, 2]
実行不可能!
{'qpu_sampling_time': 97520.0, 'qpu_anneal_time_per_sample': 50.0, 'qpu_readout_time_per_sample': 26.5, 'qpu_access_time': 104366.41, 'qpu_access_overhead_time': 531.59, 'qpu_programming_time': 6846.41, 'qpu_delay_time_per_sample': 21.02, 'total_post_processing_time': 346.0, 'post_processing_overhead_time': 346.0}
実際最小の値を持つ解:{1, 4} 値:84
解の分割状況[1, 1]
実行可能解/試行回数 = 2.5
######################################
######################################
P=101, numruns=1000, chain_prm=1.78
{1, 4}
energy=-118.0, occurrence=65, chain_break=0.0
元問題の最適値？: 84.0
実際のコスト: 84
[1, 1]
実行可能! 元問題の最適値は84.0
{0, 4}
energy=-118.0, occurrence=70, chain_break=0.0
元問題の最適値？: 84.0
実際のコスト: 84
[1, 1]
実行可能! 元問題の最適値は84.0
{4, 5}
energy=-118.0, occurrence=30, chain_break=0.0
元問題の最適値？: 84.0
実際のコスト: 84
[1, 1]
実行可能! 元問題の最適値は84.0
{4, 7}
energy=-117.0, occurrence=73, chain_break=0.0
元問題の最適値？: 85.0
実際のコスト: 85
[1, 1]
実行可能! 元問題の最適値は85.0
{4, 6}
energy=-117.0, occurrence=38, chain_break=0.0
元問題の最適値？: 85.0
実際のコスト: 85
[1, 1]
実行可能! 元問題の最適値は85.0
{9, 4}
energy=-117.0, occurrence=98, chain_break=0.0
元問題の最適値？: 85.0
実際のコスト: 85
[1, 1]
実行可能! 元問題の最適値は85.0
{8, 1}
energy=-115.0, occurrence=30, chain_break=0.0
元問題の最適値？: 87.0
実際のコスト: 87
[1, 1]
実行可能! 元問題の最適値は87.0
{0, 8}
energy=-115.0, occurrence=30, chain_break=0.0
元問題の最適値？: 87.0
実際のコスト: 87
[1, 1]
実行可能! 元問題の最適値は87.0
{8, 5}
energy=-115.0, occurrence=6, chain_break=0.0
元問題の最適値？: 87.0
実際のコスト: 87
[1, 1]
実行可能! 元問題の最適値は87.0
{8, 9}
energy=-114.0, occurrence=40, chain_break=0.0
元問題の最適値？: 88.0
実際のコスト: 88
[1, 1]
実行可能! 元問題の最適値は88.0
{8, 7}
energy=-114.0, occurrence=32, chain_break=0.0
元問題の最適値？: 88.0
実際のコスト: 88
[1, 1]
実行可能! 元問題の最適値は88.0
{8, 6}
energy=-114.0, occurrence=14, chain_break=0.0
元問題の最適値？: 88.0
実際のコスト: 88
[1, 1]
実行可能! 元問題の最適値は88.0
{1, 2}
energy=-113.0, occurrence=57, chain_break=0.0
元問題の最適値？: 89.0
実際のコスト: 89
[1, 1]
実行可能! 元問題の最適値は89.0
{0, 2}
energy=-113.0, occurrence=68, chain_break=0.0
元問題の最適値？: 89.0
実際のコスト: 89
[1, 1]
実行可能! 元問題の最適値は89.0
{2, 5}
energy=-113.0, occurrence=25, chain_break=0.0
元問題の最適値？: 89.0
実際のコスト: 89
[1, 1]
実行可能! 元問題の最適値は89.0
{0, 3}
energy=-112.0, occurrence=24, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{2, 7}
energy=-112.0, occurrence=72, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{9, 2}
energy=-112.0, occurrence=72, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{2, 6}
energy=-112.0, occurrence=32, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{3, 5}
energy=-112.0, occurrence=15, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{1, 3}
energy=-112.0, occurrence=26, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{3, 6}
energy=-111.0, occurrence=17, chain_break=0.0
元問題の最適値？: 91.0
実際のコスト: 91
[1, 1]
実行可能! 元問題の最適値は91.0
{3, 7}
energy=-111.0, occurrence=23, chain_break=0.0
元問題の最適値？: 91.0
実際のコスト: 91
[1, 1]
実行可能! 元問題の最適値は91.0
{9, 3}
energy=-111.0, occurrence=35, chain_break=0.0
元問題の最適値？: 91.0
実際のコスト: 91
[1, 1]
実行可能! 元問題の最適値は91.0
{1}
energy=-91.0, occurrence=2, chain_break=0.0
元問題の最適値？: 111.0
実際のコスト: 10
[0, 1]
実行不可能!
{0}
energy=-91.0, occurrence=1, chain_break=0.0
元問題の最適値？: 111.0
実際のコスト: 10
[0, 1]
実行不可能!
{9}
energy=-90.0, occurrence=4, chain_break=0.0
元問題の最適値？: 112.0
実際のコスト: 11
[0, 1]
実行不可能!
{7}
energy=-90.0, occurrence=1, chain_break=0.0
元問題の最適値？: 112.0
実際のコスト: 11
[0, 1]
実行不可能!
{'qpu_sampling_time': 102160.0, 'qpu_anneal_time_per_sample': 50.0, 'qpu_readout_time_per_sample': 31.14, 'qpu_access_time': 109005.61, 'qpu_access_overhead_time': 733.39, 'qpu_programming_time': 6845.61, 'qpu_delay_time_per_sample': 21.02, 'post_processing_overhead_time': 2131.0, 'total_post_processing_time': 2131.0}
実際最小の値を持つ解:{4, 5} 値:84
解の分割状況[1, 1]
実行可能解/試行回数 = 2.4
######################################
######################################
P=101, numruns=1000, chain_prm=1.78
{0, 4}
energy=-118.0, occurrence=55, chain_break=0.0
元問題の最適値？: 84.0
実際のコスト: 84
[1, 1]
実行可能! 元問題の最適値は84.0
{4, 5}
energy=-118.0, occurrence=15, chain_break=0.0
元問題の最適値？: 84.0
実際のコスト: 84
[1, 1]
実行可能! 元問題の最適値は84.0
{1, 4}
energy=-118.0, occurrence=70, chain_break=0.0
元問題の最適値？: 84.0
実際のコスト: 84
[1, 1]
実行可能! 元問題の最適値は84.0
{4, 6}
energy=-117.0, occurrence=41, chain_break=0.0
元問題の最適値？: 85.0
実際のコスト: 85
[1, 1]
実行可能! 元問題の最適値は85.0
{9, 4}
energy=-117.0, occurrence=64, chain_break=0.0
元問題の最適値？: 85.0
実際のコスト: 85
[1, 1]
実行可能! 元問題の最適値は85.0
{4, 7}
energy=-117.0, occurrence=73, chain_break=0.0
元問題の最適値？: 85.0
実際のコスト: 85
[1, 1]
実行可能! 元問題の最適値は85.0
{0, 8}
energy=-115.0, occurrence=5, chain_break=0.0
元問題の最適値？: 87.0
実際のコスト: 87
[1, 1]
実行可能! 元問題の最適値は87.0
{8, 5}
energy=-115.0, occurrence=3, chain_break=0.0
元問題の最適値？: 87.0
実際のコスト: 87
[1, 1]
実行可能! 元問題の最適値は87.0
{8, 1}
energy=-115.0, occurrence=10, chain_break=0.0
元問題の最適値？: 87.0
実際のコスト: 87
[1, 1]
実行可能! 元問題の最適値は87.0
{8, 9}
energy=-114.0, occurrence=9, chain_break=0.0
元問題の最適値？: 88.0
実際のコスト: 88
[1, 1]
実行可能! 元問題の最適値は88.0
{8, 7}
energy=-114.0, occurrence=22, chain_break=0.0
元問題の最適値？: 88.0
実際のコスト: 88
[1, 1]
実行可能! 元問題の最適値は88.0
{8, 6}
energy=-114.0, occurrence=8, chain_break=0.0
元問題の最適値？: 88.0
実際のコスト: 88
[1, 1]
実行可能! 元問題の最適値は88.0
{0, 2}
energy=-113.0, occurrence=56, chain_break=0.0
元問題の最適値？: 89.0
実際のコスト: 89
[1, 1]
実行可能! 元問題の最適値は89.0
{2, 5}
energy=-113.0, occurrence=13, chain_break=0.0
元問題の最適値？: 89.0
実際のコスト: 89
[1, 1]
実行可能! 元問題の最適値は89.0
{1, 2}
energy=-113.0, occurrence=65, chain_break=0.0
元問題の最適値？: 89.0
実際のコスト: 89
[1, 1]
実行可能! 元問題の最適値は89.0
{9, 2}
energy=-112.0, occurrence=51, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{0, 3}
energy=-112.0, occurrence=34, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{3, 5}
energy=-112.0, occurrence=9, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{2, 6}
energy=-112.0, occurrence=59, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{2, 7}
energy=-112.0, occurrence=89, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{1, 3}
energy=-112.0, occurrence=55, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{3, 6}
energy=-111.0, occurrence=33, chain_break=0.0
元問題の最適値？: 91.0
実際のコスト: 91
[1, 1]
実行可能! 元問題の最適値は91.0
{9, 3}
energy=-111.0, occurrence=32, chain_break=0.0
元問題の最適値？: 91.0
実際のコスト: 91
[1, 1]
実行可能! 元問題の最適値は91.0
{3, 7}
energy=-111.0, occurrence=56, chain_break=0.0
元問題の最適値？: 91.0
実際のコスト: 91
[1, 1]
実行可能! 元問題の最適値は91.0
{0}
energy=-91.0, occurrence=1, chain_break=0.0
元問題の最適値？: 111.0
実際のコスト: 10
[0, 1]
実行不可能!
{1}
energy=-91.0, occurrence=1, chain_break=0.0
元問題の最適値？: 111.0
実際のコスト: 10
[0, 1]
実行不可能!
{6}
energy=-90.0, occurrence=2, chain_break=0.0
元問題の最適値？: 112.0
実際のコスト: 11
[0, 1]
実行不可能!
{9}
energy=-90.0, occurrence=3, chain_break=0.0
元問題の最適値？: 112.0
実際のコスト: 11
[0, 1]
実行不可能!
{0, 1, 4}
energy=-7.0, occurrence=1, chain_break=0.0
元問題の最適値？: 195.0
実際のコスト: 94
[1, 2]
実行不可能!
{9, 4, 6}
energy=-5.0, occurrence=1, chain_break=0.0
元問題の最適値？: 197.0
実際のコスト: 96
[1, 2]
実行不可能!
{0, 2, 5}
energy=-2.0, occurrence=1, chain_break=0.0
元問題の最適値？: 200.0
実際のコスト: 99
[1, 2]
実行不可能!
{0, 3, 4}
energy=63.0, occurrence=7, chain_break=0.0
元問題の最適値？: 265.0
実際のコスト: 164
[2, 1]
実行不可能!
{3, 4, 5}
energy=63.0, occurrence=3, chain_break=0.0
元問題の最適値？: 265.0
実際のコスト: 164
[2, 1]
実行不可能!
{1, 3, 4}
energy=63.0, occurrence=10, chain_break=0.0
元問題の最適値？: 265.0
実際のコスト: 164
[2, 1]
実行不可能!
{3, 4, 6}
energy=64.0, occurrence=2, chain_break=0.0
元問題の最適値？: 266.0
実際のコスト: 165
[2, 1]
実行不可能!
{9, 3, 4}
energy=64.0, occurrence=6, chain_break=0.0
元問題の最適値？: 266.0
実際のコスト: 165
[2, 1]
実行不可能!
{3, 4, 7}
energy=64.0, occurrence=6, chain_break=0.0
元問題の最適値？: 266.0
実際のコスト: 165
[2, 1]
実行不可能!
{8, 1, 3}
energy=66.0, occurrence=2, chain_break=0.0
元問題の最適値？: 268.0
実際のコスト: 167
[2, 1]
実行不可能!
{8, 3, 7}
energy=67.0, occurrence=1, chain_break=0.0
元問題の最適値？: 269.0
実際のコスト: 168
[2, 1]
実行不可能!
{8, 3, 6}
energy=67.0, occurrence=1, chain_break=0.0
元問題の最適値？: 269.0
実際のコスト: 168
[2, 1]
実行不可能!
{8, 9, 3}
energy=67.0, occurrence=1, chain_break=0.0
元問題の最適値？: 269.0
実際のコスト: 168
[2, 1]
実行不可能!
{1, 2, 3}
energy=68.0, occurrence=7, chain_break=0.0
元問題の最適値？: 270.0
実際のコスト: 169
[2, 1]
実行不可能!
{0, 2, 3}
energy=68.0, occurrence=6, chain_break=0.0
元問題の最適値？: 270.0
実際のコスト: 169
[2, 1]
実行不可能!
{2, 3, 7}
energy=69.0, occurrence=6, chain_break=0.0
元問題の最適値？: 271.0
実際のコスト: 170
[2, 1]
実行不可能!
{9, 2, 3}
energy=69.0, occurrence=1, chain_break=0.0
元問題の最適値？: 271.0
実際のコスト: 170
[2, 1]
実行不可能!
{2, 3, 6}
energy=69.0, occurrence=4, chain_break=0.0
元問題の最適値？: 271.0
実際のコスト: 170
[2, 1]
実行不可能!
{'qpu_sampling_time': 96300.0, 'qpu_anneal_time_per_sample': 50.0, 'qpu_readout_time_per_sample': 25.28, 'qpu_access_time': 103144.41, 'qpu_access_overhead_time': 873.59, 'qpu_programming_time': 6844.41, 'qpu_delay_time_per_sample': 21.02, 'post_processing_overhead_time': 1835.0, 'total_post_processing_time': 1835.0}
実際最小の値を持つ解:{1, 4} 値:84
解の分割状況[1, 1]
実行可能解/試行回数 = 2.4
######################################
######################################
P=101, numruns=1000, chain_prm=1.78
{1, 4}
energy=-118.0, occurrence=30, chain_break=0.0
元問題の最適値？: 84.0
実際のコスト: 84
[1, 1]
実行可能! 元問題の最適値は84.0
{4, 5}
energy=-118.0, occurrence=14, chain_break=0.0
元問題の最適値？: 84.0
実際のコスト: 84
[1, 1]
実行可能! 元問題の最適値は84.0
{0, 4}
energy=-118.0, occurrence=9, chain_break=0.0
元問題の最適値？: 84.0
実際のコスト: 84
[1, 1]
実行可能! 元問題の最適値は84.0
{4, 6}
energy=-117.0, occurrence=49, chain_break=0.0
元問題の最適値？: 85.0
実際のコスト: 85
[1, 1]
実行可能! 元問題の最適値は85.0
{4, 7}
energy=-117.0, occurrence=78, chain_break=0.0
元問題の最適値？: 85.0
実際のコスト: 85
[1, 1]
実行可能! 元問題の最適値は85.0
{9, 4}
energy=-117.0, occurrence=25, chain_break=0.0
元問題の最適値？: 85.0
実際のコスト: 85
[1, 1]
実行可能! 元問題の最適値は85.0
{0, 8}
energy=-115.0, occurrence=7, chain_break=0.0
元問題の最適値？: 87.0
実際のコスト: 87
[1, 1]
実行可能! 元問題の最適値は87.0
{8, 1}
energy=-115.0, occurrence=23, chain_break=0.0
元問題の最適値？: 87.0
実際のコスト: 87
[1, 1]
実行可能! 元問題の最適値は87.0
{8, 5}
energy=-115.0, occurrence=9, chain_break=0.0
元問題の最適値？: 87.0
実際のコスト: 87
[1, 1]
実行可能! 元問題の最適値は87.0
{8, 6}
energy=-114.0, occurrence=60, chain_break=0.0
元問題の最適値？: 88.0
実際のコスト: 88
[1, 1]
実行可能! 元問題の最適値は88.0
{8, 7}
energy=-114.0, occurrence=67, chain_break=0.0
元問題の最適値？: 88.0
実際のコスト: 88
[1, 1]
実行可能! 元問題の最適値は88.0
{8, 9}
energy=-114.0, occurrence=17, chain_break=0.0
元問題の最適値？: 88.0
実際のコスト: 88
[1, 1]
実行可能! 元問題の最適値は88.0
{2, 5}
energy=-113.0, occurrence=58, chain_break=0.0
元問題の最適値？: 89.0
実際のコスト: 89
[1, 1]
実行可能! 元問題の最適値は89.0
{1, 2}
energy=-113.0, occurrence=85, chain_break=0.0
元問題の最適値？: 89.0
実際のコスト: 89
[1, 1]
実行可能! 元問題の最適値は89.0
{0, 2}
energy=-113.0, occurrence=5, chain_break=0.0
元問題の最適値？: 89.0
実際のコスト: 89
[1, 1]
実行可能! 元問題の最適値は89.0
{2, 6}
energy=-112.0, occurrence=172, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{1, 3}
energy=-112.0, occurrence=6, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{3, 5}
energy=-112.0, occurrence=4, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{2, 7}
energy=-112.0, occurrence=200, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{9, 2}
energy=-112.0, occurrence=49, chain_break=0.0
元問題の最適値？: 90.0
実際のコスト: 90
[1, 1]
実行可能! 元問題の最適値は90.0
{3, 6}
energy=-111.0, occurrence=11, chain_break=0.0
元問題の最適値？: 91.0
実際のコスト: 91
[1, 1]
実行可能! 元問題の最適値は91.0
{9, 3}
energy=-111.0, occurrence=2, chain_break=0.0
元問題の最適値？: 91.0
実際のコスト: 91
[1, 1]
実行可能! 元問題の最適値は91.0
{3, 7}
energy=-111.0, occurrence=14, chain_break=0.0
元問題の最適値？: 91.0
実際のコスト: 91
[1, 1]
実行可能! 元問題の最適値は91.0
{1}
energy=-91.0, occurrence=1, chain_break=0.0
元問題の最適値？: 111.0
実際のコスト: 10
[0, 1]
実行不可能!
{6}
energy=-90.0, occurrence=1, chain_break=0.0
元問題の最適値？: 112.0
実際のコスト: 11
[0, 1]
実行不可能!
{7}
energy=-90.0, occurrence=3, chain_break=0.0
元問題の最適値？: 112.0
実際のコスト: 11
[0, 1]
実行不可能!
{10}
energy=-32.0, occurrence=1, chain_break=0.0
元問題の最適値？: 170.0
実際のコスト: 170
[1, 1]
実行可能! 元問題の最適値は170.0
{'qpu_sampling_time': 97920.0, 'qpu_anneal_time_per_sample': 50.0, 'qpu_readout_time_per_sample': 26.9, 'qpu_access_time': 104766.01, 'qpu_access_overhead_time': 942.99, 'qpu_programming_time': 6846.01, 'qpu_delay_time_per_sample': 21.02, 'post_processing_overhead_time': 191.0, 'total_post_processing_time': 191.0}
実際最小の値を持つ解:{0, 4} 値:84
解の分割状況[1, 1]
実行可能解/試行回数 = 2.4
######################################
