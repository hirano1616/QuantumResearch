######################################
P=106, numruns=1000, chain_prm=1.78
{8, 5}
energy=-115.0, occurrence=51, chain_break=0.0
元問題の最適値？: 97.0
実際のコスト: 97
[1, 1]
実行可能! 元問題の最適値は97.0
{4, 5}
energy=-113.0, occurrence=25, chain_break=0.0
元問題の最適値？: 99.0
実際のコスト: 99
[1, 1]
実行可能! 元問題の最適値は99.0
{5, 7}
energy=-112.0, occurrence=28, chain_break=0.0
元問題の最適値？: 100.0
実際のコスト: 100
[1, 1]
実行可能! 元問題の最適値は100.0
{8, 2}
energy=-111.0, occurrence=76, chain_break=0.0
元問題の最適値？: 101.0
実際のコスト: 101
[1, 1]
実行可能! 元問題の最適値は101.0
{0, 5}
energy=-111.0, occurrence=44, chain_break=0.0
元問題の最適値？: 101.0
実際のコスト: 101
[1, 1]
実行可能! 元問題の最適値は101.0
{3, 5}
energy=-109.0, occurrence=24, chain_break=0.0
元問題の最適値？: 103.0
実際のコスト: 103
[1, 1]
実行可能! 元問題の最適値は103.0
{8, 1}
energy=-109.0, occurrence=88, chain_break=0.0
元問題の最適値？: 103.0
実際のコスト: 103
[1, 1]
実行可能! 元問題の最適値は103.0
{2, 4}
energy=-109.0, occurrence=46, chain_break=0.0
元問題の最適値？: 103.0
実際のコスト: 103
[1, 1]
実行可能! 元問題の最適値は103.0
{2, 7}
energy=-108.0, occurrence=48, chain_break=0.0
元問題の最適値？: 104.0
実際のコスト: 104
[1, 1]
実行可能! 元問題の最適値は104.0
{0, 2}
energy=-107.0, occurrence=49, chain_break=0.0
元問題の最適値？: 105.0
実際のコスト: 105
[1, 1]
実行可能! 元問題の最適値は105.0
{1, 4}
energy=-107.0, occurrence=71, chain_break=0.0
元問題の最適値？: 105.0
実際のコスト: 105
[1, 1]
実行可能! 元問題の最適値は105.0
{1, 7}
energy=-106.0, occurrence=47, chain_break=0.0
元問題の最適値？: 106.0
実際のコスト: 106
[1, 1]
実行可能! 元問題の最適値は106.0
{2, 3}
energy=-105.0, occurrence=36, chain_break=0.0
元問題の最適値？: 107.0
実際のコスト: 107
[1, 1]
実行可能! 元問題の最適値は107.0
{8, 9}
energy=-105.0, occurrence=31, chain_break=0.0
元問題の最適値？: 107.0
実際のコスト: 107
[1, 1]
実行可能! 元問題の最適値は107.0
{0, 1}
energy=-105.0, occurrence=61, chain_break=0.0
元問題の最適値？: 107.0
実際のコスト: 107
[1, 1]
実行可能! 元問題の最適値は107.0
{8, 6}
energy=-103.0, occurrence=32, chain_break=0.0
元問題の最適値？: 109.0
実際のコスト: 109
[1, 1]
実行可能! 元問題の最適値は109.0
{1, 3}
energy=-103.0, occurrence=36, chain_break=0.0
元問題の最適値？: 109.0
実際のコスト: 109
[1, 1]
実行可能! 元問題の最適値は109.0
{9, 4}
energy=-103.0, occurrence=20, chain_break=0.0
元問題の最適値？: 109.0
実際のコスト: 109
[1, 1]
実行可能! 元問題の最適値は109.0
{9, 7}
energy=-102.0, occurrence=31, chain_break=0.0
元問題の最適値？: 110.0
実際のコスト: 110
[1, 1]
実行可能! 元問題の最適値は110.0
{0, 9}
energy=-101.0, occurrence=28, chain_break=0.0
元問題の最適値？: 111.0
実際のコスト: 111
[1, 1]
実行可能! 元問題の最適値は111.0
{4, 6}
energy=-101.0, occurrence=24, chain_break=0.0
元問題の最適値？: 111.0
実際のコスト: 111
[1, 1]
実行可能! 元問題の最適値は111.0
{6, 7}
energy=-100.0, occurrence=21, chain_break=0.0
元問題の最適値？: 112.0
実際のコスト: 112
[1, 1]
実行可能! 元問題の最適値は112.0
{9, 3}
energy=-99.0, occurrence=12, chain_break=0.0
元問題の最適値？: 113.0
実際のコスト: 113
[1, 1]
実行可能! 元問題の最適値は113.0
{0, 6}
energy=-99.0, occurrence=23, chain_break=0.0
元問題の最適値？: 113.0
実際のコスト: 113
[1, 1]
実行可能! 元問題の最適値は113.0
{3, 6}
energy=-97.0, occurrence=18, chain_break=0.0
元問題の最適値？: 115.0
実際のコスト: 115
[1, 1]
実行可能! 元問題の最適値は115.0
{8}
energy=-79.0, occurrence=5, chain_break=0.0
元問題の最適値？: 133.0
実際のコスト: 27
[1, 0]
実行不可能!
{4}
energy=-77.0, occurrence=2, chain_break=0.0
元問題の最適値？: 135.0
実際のコスト: 29
[1, 0]
実行不可能!
{7}
energy=-76.0, occurrence=1, chain_break=0.0
元問題の最適値？: 136.0
実際のコスト: 30
[1, 0]
実行不可能!
{0}
energy=-75.0, occurrence=6, chain_break=0.0
元問題の最適値？: 137.0
実際のコスト: 31
[1, 0]
実行不可能!
{3}
energy=-73.0, occurrence=6, chain_break=0.0
元問題の最適値？: 139.0
実際のコスト: 33
[1, 0]
実行不可能!
{2}
energy=-32.0, occurrence=1, chain_break=0.0
元問題の最適値？: 180.0
実際のコスト: 74
[0, 1]
実行不可能!
{1}
energy=-30.0, occurrence=1, chain_break=0.0
元問題の最適値？: 182.0
実際のコスト: 76
[0, 1]
実行不可能!
{6}
energy=-24.0, occurrence=1, chain_break=0.0
元問題の最適値？: 188.0
実際のコスト: 82
[0, 1]
実行不可能!
{10}
energy=2.0, occurrence=3, chain_break=0.0
元問題の最適値？: 214.0
実際のコスト: 214
[1, 1]
実行可能! 元問題の最適値は214.0
{2, 3, 4}
energy=30.0, occurrence=1, chain_break=0.0
元問題の最適値？: 242.0
実際のコスト: 136
[2, 1]
実行不可能!
{1, 3, 4}
energy=32.0, occurrence=1, chain_break=0.0
元問題の最適値？: 244.0
実際のコスト: 138
[2, 1]
実行不可能!
{3, 6, 7}
energy=39.0, occurrence=1, chain_break=0.0
元問題の最適値？: 251.0
実際のコスト: 145
[2, 1]
実行不可能!
{10, 4}
energy=137.0, occurrence=1, chain_break=0.0
元問題の最適値？: 349.0
実際のコスト: 243
[2, 1]
実行不可能!
{'qpu_sampling_time': 96980.0, 'qpu_anneal_time_per_sample': 50.0, 'qpu_readout_time_per_sample': 25.96, 'qpu_access_time': 103826.81, 'qpu_access_overhead_time': 480.19, 'qpu_programming_time': 6846.81, 'qpu_delay_time_per_sample': 21.02, 'total_post_processing_time': 1438.0, 'post_processing_overhead_time': 1438.0}
実際最小の値を持つ解:{8, 5} 値:97
解の分割状況[1, 1]
実行可能解/試行回数 = 2.6
######################################
