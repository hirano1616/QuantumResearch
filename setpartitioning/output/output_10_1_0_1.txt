######################################
P=18, numruns=1000, chain_prm=1.78
{4}
energy=-2.0, occurrence=10, chain_break=0.0
元問題の最適値？: 16.0
実際のコスト: 16
[1]
実行可能! 元問題の最適値は16.0
{0}
energy=-2.0, occurrence=146, chain_break=0.0
元問題の最適値？: 16.0
実際のコスト: 16
[1]
実行可能! 元問題の最適値は16.0
{5}
energy=-1.0, occurrence=258, chain_break=0.0
元問題の最適値？: 17.0
実際のコスト: 17
[1]
実行可能! 元問題の最適値は17.0
{7}
energy=-1.0, occurrence=52, chain_break=0.0
元問題の最適値？: 17.0
実際のコスト: 17
[1]
実行可能! 元問題の最適値は17.0
{2}
energy=-1.0, occurrence=104, chain_break=0.0
元問題の最適値？: 17.0
実際のコスト: 17
[1]
実行可能! 元問題の最適値は17.0
{6}
energy=0.0, occurrence=162, chain_break=0.0
元問題の最適値？: 18.0
実際のコスト: 18
[1]
実行可能! 元問題の最適値は18.0
{3}
energy=0.0, occurrence=59, chain_break=0.0
元問題の最適値？: 18.0
実際のコスト: 18
[1]
実行可能! 元問題の最適値は18.0
set()
energy=0.0, occurrence=44, chain_break=0.0
元問題の最適値？: 18.0
実際のコスト: 0
[0]
実行不可能!
{8}
energy=1.0, occurrence=32, chain_break=0.0
元問題の最適値？: 19.0
実際のコスト: 19
[1]
実行可能! 元問題の最適値は19.0
{9}
energy=1.0, occurrence=25, chain_break=0.0
元問題の最適値？: 19.0
実際のコスト: 19
[1]
実行可能! 元問題の最適値は19.0
{1}
energy=1.0, occurrence=91, chain_break=0.0
元問題の最適値？: 19.0
実際のコスト: 19
[1]
実行可能! 元問題の最適値は19.0
{10}
energy=18.0, occurrence=7, chain_break=0.0
元問題の最適値？: 36.0
実際のコスト: 36
[1]
実行可能! 元問題の最適値は36.0
{0, 2}
energy=33.0, occurrence=1, chain_break=0.0
元問題の最適値？: 51.0
実際のコスト: 33
[2]
実行不可能!
{3, 4}
energy=34.0, occurrence=1, chain_break=0.0
元問題の最適値？: 52.0
実際のコスト: 34
[2]
実行不可能!
{5, 7}
energy=34.0, occurrence=1, chain_break=0.0
元問題の最適値？: 52.0
実際のコスト: 34
[2]
実行不可能!
{0, 6}
energy=34.0, occurrence=1, chain_break=0.0
元問題の最適値？: 52.0
実際のコスト: 34
[2]
実行不可能!
{2, 6}
energy=35.0, occurrence=1, chain_break=0.0
元問題の最適値？: 53.0
実際のコスト: 35
[2]
実行不可能!
{1, 2}
energy=36.0, occurrence=1, chain_break=0.0
元問題の最適値？: 54.0
実際のコスト: 36
[2]
実行不可能!
{3, 6}
energy=36.0, occurrence=2, chain_break=0.0
元問題の最適値？: 54.0
実際のコスト: 36
[2]
実行不可能!
{1, 6}
energy=37.0, occurrence=1, chain_break=0.0
元問題の最適値？: 55.0
実際のコスト: 37
[2]
実行不可能!
{9, 6}
energy=37.0, occurrence=1, chain_break=0.0
元問題の最適値？: 55.0
実際のコスト: 37
[2]
実行不可能!
{'qpu_sampling_time': 97760.0, 'qpu_anneal_time_per_sample': 50.0, 'qpu_readout_time_per_sample': 26.74, 'qpu_access_time': 104605.61, 'qpu_access_overhead_time': 494.39, 'qpu_programming_time': 6845.61, 'qpu_delay_time_per_sample': 21.02, 'total_post_processing_time': 1797.0, 'post_processing_overhead_time': 1797.0}
実際最小の値を持つ解:{0} 値:16
解の分割状況[1]
実行可能解/試行回数 = 1.0999999999999999
######################################
######################################
P=18, numruns=1000, chain_prm=1.78
{4}
energy=-2.0, occurrence=218, chain_break=0.0
元問題の最適値？: 16.0
実際のコスト: 16
[1]
実行可能! 元問題の最適値は16.0
{0}
energy=-2.0, occurrence=262, chain_break=0.0
元問題の最適値？: 16.0
実際のコスト: 16
[1]
実行可能! 元問題の最適値は16.0
{7}
energy=-1.0, occurrence=112, chain_break=0.0
元問題の最適値？: 17.0
実際のコスト: 17
[1]
実行可能! 元問題の最適値は17.0
{2}
energy=-1.0, occurrence=30, chain_break=0.0
元問題の最適値？: 17.0
実際のコスト: 17
[1]
実行可能! 元問題の最適値は17.0
{5}
energy=-1.0, occurrence=50, chain_break=0.0
元問題の最適値？: 17.0
実際のコスト: 17
[1]
実行可能! 元問題の最適値は17.0
{3}
energy=0.0, occurrence=134, chain_break=0.0
元問題の最適値？: 18.0
実際のコスト: 18
[1]
実行可能! 元問題の最適値は18.0
set()
energy=0.0, occurrence=9, chain_break=0.0
元問題の最適値？: 18.0
実際のコスト: 0
[0]
実行不可能!
{6}
energy=0.0, occurrence=21, chain_break=0.0
元問題の最適値？: 18.0
実際のコスト: 18
[1]
実行可能! 元問題の最適値は18.0
{1}
energy=1.0, occurrence=35, chain_break=0.0
元問題の最適値？: 19.0
実際のコスト: 19
[1]
実行可能! 元問題の最適値は19.0
{9}
energy=1.0, occurrence=68, chain_break=0.0
元問題の最適値？: 19.0
実際のコスト: 19
[1]
実行可能! 元問題の最適値は19.0
{8}
energy=1.0, occurrence=58, chain_break=0.0
元問題の最適値？: 19.0
実際のコスト: 19
[1]
実行可能! 元問題の最適値は19.0
{10}
energy=18.0, occurrence=1, chain_break=0.0
元問題の最適値？: 36.0
実際のコスト: 36
[1]
実行可能! 元問題の最適値は36.0
{0, 6}
energy=34.0, occurrence=1, chain_break=0.0
元問題の最適値？: 52.0
実際のコスト: 34
[2]
実行不可能!
{10, 7}
energy=53.0, occurrence=1, chain_break=0.0
元問題の最適値？: 71.0
実際のコスト: 53
[2]
実行不可能!
{'qpu_sampling_time': 97640.0, 'qpu_anneal_time_per_sample': 50.0, 'qpu_readout_time_per_sample': 26.62, 'qpu_access_time': 104486.41, 'qpu_access_overhead_time': 1076.59, 'qpu_programming_time': 6846.41, 'qpu_delay_time_per_sample': 21.02, 'post_processing_overhead_time': 138.0, 'total_post_processing_time': 138.0}
実際最小の値を持つ解:{0} 値:16
解の分割状況[1]
実行可能解/試行回数 = 1.0999999999999999
######################################
######################################
P=18, numruns=1000, chain_prm=1.78
{0}
energy=-2.0, occurrence=329, chain_break=0.0
元問題の最適値？: 16.0
実際のコスト: 16
[1]
実行可能! 元問題の最適値は16.0
{4}
energy=-2.0, occurrence=57, chain_break=0.0
元問題の最適値？: 16.0
実際のコスト: 16
[1]
実行可能! 元問題の最適値は16.0
{5}
energy=-1.0, occurrence=85, chain_break=0.0
元問題の最適値？: 17.0
実際のコスト: 17
[1]
実行可能! 元問題の最適値は17.0
{7}
energy=-1.0, occurrence=153, chain_break=0.0
元問題の最適値？: 17.0
実際のコスト: 17
[1]
実行可能! 元問題の最適値は17.0
{2}
energy=-1.0, occurrence=138, chain_break=0.0
元問題の最適値？: 17.0
実際のコスト: 17
[1]
実行可能! 元問題の最適値は17.0
{6}
energy=0.0, occurrence=84, chain_break=0.0
元問題の最適値？: 18.0
実際のコスト: 18
[1]
実行可能! 元問題の最適値は18.0
set()
energy=0.0, occurrence=10, chain_break=0.0
元問題の最適値？: 18.0
実際のコスト: 0
[0]
実行不可能!
{3}
energy=0.0, occurrence=64, chain_break=0.0
元問題の最適値？: 18.0
実際のコスト: 18
[1]
実行可能! 元問題の最適値は18.0
{1}
energy=1.0, occurrence=12, chain_break=0.0
元問題の最適値？: 19.0
実際のコスト: 19
[1]
実行可能! 元問題の最適値は19.0
{9}
energy=1.0, occurrence=55, chain_break=0.0
元問題の最適値？: 19.0
実際のコスト: 19
[1]
実行可能! 元問題の最適値は19.0
{8}
energy=1.0, occurrence=11, chain_break=0.0
元問題の最適値？: 19.0
実際のコスト: 19
[1]
実行可能! 元問題の最適値は19.0
{4, 7}
energy=33.0, occurrence=1, chain_break=0.0
元問題の最適値？: 51.0
実際のコスト: 33
[2]
実行不可能!
{8, 6}
energy=37.0, occurrence=1, chain_break=0.0
元問題の最適値？: 55.0
実際のコスト: 37
[2]
実行不可能!
{'qpu_sampling_time': 105880.0, 'qpu_anneal_time_per_sample': 50.0, 'qpu_readout_time_per_sample': 34.86, 'qpu_access_time': 112726.81, 'qpu_access_overhead_time': 480.19, 'qpu_programming_time': 6846.81, 'qpu_delay_time_per_sample': 21.02, 'post_processing_overhead_time': 553.0, 'total_post_processing_time': 553.0}
実際最小の値を持つ解:{4} 値:16
解の分割状況[1]
実行可能解/試行回数 = 1.0
######################################
######################################
P=18, numruns=1000, chain_prm=1.78
{4}
energy=-2.0, occurrence=105, chain_break=0.0
元問題の最適値？: 16.0
実際のコスト: 16
[1]
実行可能! 元問題の最適値は16.0
{0}
energy=-2.0, occurrence=17, chain_break=0.0
元問題の最適値？: 16.0
実際のコスト: 16
[1]
実行可能! 元問題の最適値は16.0
{2}
energy=-1.0, occurrence=193, chain_break=0.0
元問題の最適値？: 17.0
実際のコスト: 17
[1]
実行可能! 元問題の最適値は17.0
{7}
energy=-1.0, occurrence=88, chain_break=0.0
元問題の最適値？: 17.0
実際のコスト: 17
[1]
実行可能! 元問題の最適値は17.0
{5}
energy=-1.0, occurrence=128, chain_break=0.0
元問題の最適値？: 17.0
実際のコスト: 17
[1]
実行可能! 元問題の最適値は17.0
{6}
energy=0.0, occurrence=143, chain_break=0.0
元問題の最適値？: 18.0
実際のコスト: 18
[1]
実行可能! 元問題の最適値は18.0
set()
energy=0.0, occurrence=2, chain_break=0.0
元問題の最適値？: 18.0
実際のコスト: 0
[0]
実行不可能!
{3}
energy=0.0, occurrence=86, chain_break=0.0
元問題の最適値？: 18.0
実際のコスト: 18
[1]
実行可能! 元問題の最適値は18.0
{9}
energy=1.0, occurrence=158, chain_break=0.0
元問題の最適値？: 19.0
実際のコスト: 19
[1]
実行可能! 元問題の最適値は19.0
{8}
energy=1.0, occurrence=45, chain_break=0.0
元問題の最適値？: 19.0
実際のコスト: 19
[1]
実行可能! 元問題の最適値は19.0
{1}
energy=1.0, occurrence=30, chain_break=0.0
元問題の最適値？: 19.0
実際のコスト: 19
[1]
実行可能! 元問題の最適値は19.0
{0, 2}
energy=33.0, occurrence=2, chain_break=0.0
元問題の最適値？: 51.0
実際のコスト: 33
[2]
実行不可能!
{2, 6}
energy=35.0, occurrence=1, chain_break=0.0
元問題の最適値？: 53.0
実際のコスト: 35
[2]
実行不可能!
{9, 7}
energy=36.0, occurrence=1, chain_break=0.0
元問題の最適値？: 54.0
実際のコスト: 36
[2]
実行不可能!
{1, 9}
energy=38.0, occurrence=1, chain_break=0.0
元問題の最適値？: 56.0
実際のコスト: 38
[2]
実行不可能!
{'qpu_sampling_time': 103660.0, 'qpu_anneal_time_per_sample': 50.0, 'qpu_readout_time_per_sample': 32.64, 'qpu_access_time': 110507.21, 'qpu_access_overhead_time': 824.79, 'qpu_programming_time': 6847.21, 'qpu_delay_time_per_sample': 21.02, 'post_processing_overhead_time': 1095.0, 'total_post_processing_time': 1095.0}
実際最小の値を持つ解:{0} 値:16
解の分割状況[1]
実行可能解/試行回数 = 1.0
######################################
######################################
P=18, numruns=1000, chain_prm=1.78
{0}
energy=-2.0, occurrence=209, chain_break=0.0
元問題の最適値？: 16.0
実際のコスト: 16
[1]
実行可能! 元問題の最適値は16.0
{4}
energy=-2.0, occurrence=220, chain_break=0.0
元問題の最適値？: 16.0
実際のコスト: 16
[1]
実行可能! 元問題の最適値は16.0
{7}
energy=-1.0, occurrence=40, chain_break=0.0
元問題の最適値？: 17.0
実際のコスト: 17
[1]
実行可能! 元問題の最適値は17.0
{5}
energy=-1.0, occurrence=123, chain_break=0.0
元問題の最適値？: 17.0
実際のコスト: 17
[1]
実行可能! 元問題の最適値は17.0
{2}
energy=-1.0, occurrence=108, chain_break=0.0
元問題の最適値？: 17.0
実際のコスト: 17
[1]
実行可能! 元問題の最適値は17.0
{3}
energy=0.0, occurrence=40, chain_break=0.0
元問題の最適値？: 18.0
実際のコスト: 18
[1]
実行可能! 元問題の最適値は18.0
set()
energy=0.0, occurrence=3, chain_break=0.0
元問題の最適値？: 18.0
実際のコスト: 0
[0]
実行不可能!
{6}
energy=0.0, occurrence=58, chain_break=0.0
元問題の最適値？: 18.0
実際のコスト: 18
[1]
実行可能! 元問題の最適値は18.0
{8}
energy=1.0, occurrence=22, chain_break=0.0
元問題の最適値？: 19.0
実際のコスト: 19
[1]
実行可能! 元問題の最適値は19.0
{9}
energy=1.0, occurrence=121, chain_break=0.0
元問題の最適値？: 19.0
実際のコスト: 19
[1]
実行可能! 元問題の最適値は19.0
{1}
energy=1.0, occurrence=47, chain_break=0.0
元問題の最適値？: 19.0
実際のコスト: 19
[1]
実行可能! 元問題の最適値は19.0
{10}
energy=18.0, occurrence=1, chain_break=0.0
元問題の最適値？: 36.0
実際のコスト: 36
[1]
実行可能! 元問題の最適値は36.0
{0, 4}
energy=32.0, occurrence=2, chain_break=0.0
元問題の最適値？: 50.0
実際のコスト: 32
[2]
実行不可能!
{0, 7}
energy=33.0, occurrence=1, chain_break=0.0
元問題の最適値？: 51.0
実際のコスト: 33
[2]
実行不可能!
{4, 7}
energy=33.0, occurrence=1, chain_break=0.0
元問題の最適値？: 51.0
実際のコスト: 33
[2]
実行不可能!
{2, 4}
energy=33.0, occurrence=2, chain_break=0.0
元問題の最適値？: 51.0
実際のコスト: 33
[2]
実行不可能!
{3, 4}
energy=34.0, occurrence=1, chain_break=0.0
元問題の最適値？: 52.0
実際のコスト: 34
[2]
実行不可能!
{8, 1}
energy=38.0, occurrence=1, chain_break=0.0
元問題の最適値？: 56.0
実際のコスト: 38
[2]
実行不可能!
{'qpu_sampling_time': 97700.0, 'qpu_anneal_time_per_sample': 50.0, 'qpu_readout_time_per_sample': 26.68, 'qpu_access_time': 104546.01, 'qpu_access_overhead_time': 588.99, 'qpu_programming_time': 6846.01, 'qpu_delay_time_per_sample': 21.02, 'post_processing_overhead_time': 229.0, 'total_post_processing_time': 229.0}
実際最小の値を持つ解:{4} 値:16
解の分割状況[1]
実行可能解/試行回数 = 1.0999999999999999
######################################
######################################
P=18, numruns=1000, chain_prm=1.78
{0}
energy=-2.0, occurrence=89, chain_break=0.0
元問題の最適値？: 16.0
実際のコスト: 16
[1]
実行可能! 元問題の最適値は16.0
{4}
energy=-2.0, occurrence=171, chain_break=0.0
元問題の最適値？: 16.0
実際のコスト: 16
[1]
実行可能! 元問題の最適値は16.0
{5}
energy=-1.0, occurrence=271, chain_break=0.0
元問題の最適値？: 17.0
実際のコスト: 17
[1]
実行可能! 元問題の最適値は17.0
{7}
energy=-1.0, occurrence=96, chain_break=0.0
元問題の最適値？: 17.0
実際のコスト: 17
[1]
実行可能! 元問題の最適値は17.0
{2}
energy=-1.0, occurrence=100, chain_break=0.0
元問題の最適値？: 17.0
実際のコスト: 17
[1]
実行可能! 元問題の最適値は17.0
set()
energy=0.0, occurrence=5, chain_break=0.0
元問題の最適値？: 18.0
実際のコスト: 0
[0]
実行不可能!
{3}
energy=0.0, occurrence=72, chain_break=0.0
元問題の最適値？: 18.0
実際のコスト: 18
[1]
実行可能! 元問題の最適値は18.0
{6}
energy=0.0, occurrence=65, chain_break=0.0
元問題の最適値？: 18.0
実際のコスト: 18
[1]
実行可能! 元問題の最適値は18.0
{1}
energy=1.0, occurrence=31, chain_break=0.0
元問題の最適値？: 19.0
実際のコスト: 19
[1]
実行可能! 元問題の最適値は19.0
{8}
energy=1.0, occurrence=71, chain_break=0.0
元問題の最適値？: 19.0
実際のコスト: 19
[1]
実行可能! 元問題の最適値は19.0
{9}
energy=1.0, occurrence=24, chain_break=0.0
元問題の最適値？: 19.0
実際のコスト: 19
[1]
実行可能! 元問題の最適値は19.0
{4, 7}
energy=33.0, occurrence=1, chain_break=0.0
元問題の最適値？: 51.0
実際のコスト: 33
[2]
実行不可能!
{4, 5}
energy=33.0, occurrence=1, chain_break=0.0
元問題の最適値？: 51.0
実際のコスト: 33
[2]
実行不可能!
{2, 5}
energy=34.0, occurrence=1, chain_break=0.0
元問題の最適値？: 52.0
実際のコスト: 34
[2]
実行不可能!
{8, 5}
energy=36.0, occurrence=2, chain_break=0.0
元問題の最適値？: 54.0
実際のコスト: 36
[2]
実行不可能!
{'qpu_sampling_time': 104020.0, 'qpu_anneal_time_per_sample': 50.0, 'qpu_readout_time_per_sample': 33.0, 'qpu_access_time': 110867.2, 'qpu_access_overhead_time': 1452.8, 'qpu_programming_time': 6847.2, 'qpu_delay_time_per_sample': 21.02, 'post_processing_overhead_time': 154.0, 'total_post_processing_time': 154.0}
実際最小の値を持つ解:{4} 値:16
解の分割状況[1]
実行可能解/試行回数 = 1.0
######################################
